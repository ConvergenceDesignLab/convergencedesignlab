%row {
  display: flex;
  flex-wrap: wrap;
  margin-left: -$grid-gutter-width / 2;
  margin-right: -$grid-gutter-width / 2;
}

.row {
  @extend %row;
}

.row--justify-center {
  @extend %row;
  justify-content: center;
}

.row--space-between {
  @extend %row;
  justify-content: space-between;
}

.row--justify-end {
  @extend %row;
  justify-content: flex-end;
}

@mixin col {
  flex: 0 0 auto;
  padding-left: $grid-gutter-width / 2;
  padding-right: $grid-gutter-width / 2;
  max-width: 100%;
}

.col {
  @include col;
}

@mixin column-style($column-size, $total-columns) {
  @include col;
  flex: 0 0 percentage($column-size / $total-columns);
  width: percentage($column-size / $total-columns);
  max-width: percentage($column-size / $total-columns);
}

@mixin make-column($breakpoint, $column-size, $total-columns) {
  .col--#{$breakpoint}-#{$column-size} {
    @include column-style($column-size, $total-columns);
  }
}

@mixin make-resizing-column($breakpoint) {
  .col--#{$breakpoint} {
    @include col;
    flex-grow: 1;
    max-width: 100%;
  }
}

@each $breakpoint, $width in $grid-breakpoints {
  @if ($width == 0) {
    @include make-resizing-column($breakpoint);
  } @else {
    @media (min-width: $width) {
      @include make-resizing-column($breakpoint);
    }
  }
  @for $column-size from 1 through $grid-columns {
    @if ($width == 0) {
      @include make-column($breakpoint, $column-size, $grid-columns);
    } @else {
      @media (min-width: $width) {
        @include make-column($breakpoint, $column-size, $grid-columns);
      }
    }
  }
}
